{"version":3,"file":"static/js/251.caa58d91.chunk.js","mappings":"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","sources":["components/Model/3dModel.jsx"],"sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport {Outline} from '@react-three/postprocessing'\nimport {BlendFunction, Resizer, KernelSize} from 'postprocessing'\nimport {useGLTF} from \"@react-three/drei\";\nimport {useFrame} from \"@react-three/fiber\";\n\nfunction Model(props) {\n    const {\n        setNodes = Function.prototype,\n        showAlert = Function.prototype,\n        alertNode = {}\n    } = props\n\n    const group = useRef();\n    const {nodes, materials} = useGLTF(\"/pac10.glb\");\n\n    useEffect(() => {\n        setNodes(group.current.children);\n    }, [])\n\n    function moveOnNode(e) {\n        e.stopPropagation();\n        document.querySelector('body').style.cursor = \"pointer\";\n        e.eventObject.material = e.eventObject.material.clone();\n        e.eventObject.material.color.set(0xf34f3f);\n    }\n\n    function leaveOnNode(e) {\n        e.stopPropagation();\n        document.querySelector('body').style.cursor = \"default\";\n\n        if (alertNode && (alertNode?.name === e.eventObject.name)) return;\n\n        e.eventObject.material = e.eventObject.material.clone();\n        e.eventObject.material.color.set(0xffffff);\n    }\n\n    return (\n        <group ref={group} {...props} dispose={null}>\n            <mesh\n                name=\"bak\"\n                castShadow\n                receiveShadow\n                geometry={nodes.bak.geometry}\n                material={nodes.bak.material}\n                position={[-0.02112514, 0.10767657, -0.18515362]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"bak\", defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n            <mesh\n                name=\"regulyatorDav\"\n                castShadow\n                receiveShadow\n                geometry={nodes.regulyatorDav.geometry}\n                material={nodes.regulyatorDav.material}\n                position={[-0.07846048, 0.11741482, -0.25003713]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"regulyatorDav\" ,defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n            <mesh\n                name=\"nasosKons\"\n                castShadow\n                receiveShadow\n                geometry={nodes.nasosKons.geometry}\n                material={nodes.nasosKons.material}\n                position={[-0.17763758, -0.07313324, -0.2636776]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"nasosKons\", defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n            <mesh\n                name=\"KranHarovoiA\"\n                castShadow\n                receiveShadow\n                geometry={nodes.KranHarovoiA.geometry}\n                material={nodes.KranHarovoiA.material}\n                position={[-0.07851833, 0.0067561, -0.24896501]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"KranHarovoiA\", defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n            <mesh\n                name=\"opresovatNasos\"\n                castShadow\n                receiveShadow\n                geometry={nodes.opresovatNasos.geometry}\n                material={nodes.opresovatNasos.material}\n                position={[-0.29550514, -0.08270947, -0.19236885]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"opresovatNasos\", defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n            <mesh\n                name=\"KranHarovoiB\"\n                castShadow\n                receiveShadow\n                geometry={nodes.KranHarovoiB.geometry}\n                material={nodes.KranHarovoiB.material}\n                position={[0.35377052, -0.06440883, 0.40760911]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"KranHarovoiB\", defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n            <mesh\n                name=\"pol\"\n                castShadow\n                receiveShadow\n                geometry={nodes.pol.geometry}\n                material={nodes.pol.material}\n                position={[0.02774103, -0.01, -0.02124031]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"pol\"}}\n            />\n            <mesh\n                name=\"nodeid3\"\n                castShadow\n                receiveShadow\n                geometry={nodes.nodeid3.geometry}\n                material={nodes.nodeid3.material}\n                position={[0.02774103, -0.01, -0.02124031]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"nodeid3\"}}\n            />\n            <mesh\n                name=\"armatura\"\n                castShadow\n                receiveShadow\n                geometry={nodes.armatura.geometry}\n                material={nodes.armatura.material}\n                position={[0.20144141, 0.01905002, 0.23590088]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"armatura\", defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n            <mesh\n                name=\"KranHarovoi小\"\n                castShadow\n                receiveShadow\n                geometry={nodes.KranHarovoi小.geometry}\n                material={nodes.KranHarovoi小.material}\n                position={[-0.21709174, 0.00679418, -0.08468334]}\n                rotation={[Math.PI / 2, 0, 2.61799382]}\n                userData={{name: \"KranHarovoi小\", defaultColor: {r:0.3813, g:0.3864, b:0.361}}}\n                onPointerMove={moveOnNode}\n                onPointerLeave={leaveOnNode}\n                onClick={showAlert}\n            />\n        </group>\n    );\n}\n\nuseGLTF.preload(\"/pac10.glb\");\n\nexport default Model;\n"],"names":["useGLTF","props","setNodes","Function","prototype","showAlert","alertNode","group","useRef","nodes","moveOnNode","e","stopPropagation","document","querySelector","style","cursor","eventObject","material","clone","color","set","leaveOnNode","name","materials","useEffect","current","children","ref","dispose","castShadow","receiveShadow","geometry","bak","position","rotation","Math","PI","userData","defaultColor","r","g","b","onPointerMove","onPointerLeave","onClick","regulyatorDav","nasosKons","KranHarovoiA","opresovatNasos","KranHarovoiB","pol","nodeid3","armatura","KranHarovoi小"],"sourceRoot":""}